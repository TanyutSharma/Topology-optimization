border C1(t = 0, 2 * pi) {x = 4 * cos(t) + 1; y = 4 * sin(t); label = 1;}

border C2(t = 0, -pi) {x = cos(t); y = sin(t); label = 2;}
border C3(t = pi, 0) {x = (2 + cos(t)) / 3; y = sin(t) / 3; label = 2;}
border C4(t = -pi, 0) {x = (cos(t)) / 3; y = sin(t) / 3; label = 2;}
border C5(t = pi, 0) {x = (-2 + cos(t)) / 3; y = sin(t) / 3; label = 2;}

int n = 10;
mesh Th = buildmesh(C1(9 * n) + C2(3 * n) + C3(n) + C4(n) + C5(n));

plot(Th, wait = 1);

fespace Vh(Th, P1);
Vh u, v, dxu, dyu;

func f = -2;

solve Poin(u, v) =
    int2d(Th)(
        dx(u) * dx(v) + dy(u) * dy(v)
    )
    - int2d(Th)(
          f * v
    )
    + on(1, u = 0)
    + on(2, u = 2);

dxu = dx(u);
dyu = dy(u);

plot(u, wait = 1, fill = true);

//plot(Th, u, [dxu, dyu], wait = true); //For electric field

//To visualize in 3D
savemesh(Th, "u", [x, y, u*.5]);
{
   ofstream file("u.bb");
   file << "2 1 1 " << u[].n << " 2 \n";
   for (int j = 0; j < u[].n; j++)
      file << u[][j] << endl;
}
exec("ffmedit u");
exec("del u.bb u.faces u.points");